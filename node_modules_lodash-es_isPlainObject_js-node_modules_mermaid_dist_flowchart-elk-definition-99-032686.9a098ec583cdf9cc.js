"use strict";(self.webpackChunkiam=self.webpackChunkiam||[]).push([["node_modules_lodash-es_isPlainObject_js-node_modules_mermaid_dist_flowchart-elk-definition-99-032686"],{79700:(j,D,d)=>{d.d(D,{Z:()=>w});const w=(0,d(28880).Z)(Object.getPrototypeOf,Object)},14747:(j,D,d)=>{d.d(D,{Z:()=>F});var O=d(94667),I=d(79700),w=d(5542),U=Function.prototype.toString,B=Object.prototype.hasOwnProperty,H=U.call(Object);const F=function z(M){if(!(0,w.Z)(M)||"[object Object]"!=(0,O.Z)(M))return!1;var T=(0,I.Z)(M);if(null===T)return!0;var p=B.call(T,"constructor")&&T.constructor;return"function"==typeof p&&p instanceof p&&U.call(p)==H}},66193:(j,D,d)=>{d.r(D),d.d(D,{diagram:()=>dt});var O=d(48309),I=d(44598),w=d(98876),$=d(51424),G=d(89207),h=d(81370),U=d(50997),B=d(42265);let T;d(68095),d(26705),d(75359);const p={},X={};let P={};const Z=(t,o,e)=>{const s={TB:{in:{north:"north"},out:{south:"west",west:"east",east:"south"}},LR:{in:{west:"west"},out:{east:"south",south:"north",north:"east"}},RL:{in:{east:"east"},out:{west:"north",north:"south",south:"west"}},BT:{in:{south:"south"},out:{north:"east",east:"west",west:"north"}}};return s.TD=s.TB,h.l.info("abc88",e,o,t),s[e][o][t]},V=(t,o,e)=>{if(h.l.info("getNextPort abc88",{node:t,edgeDirection:o,graphDirection:e}),!p[t])switch(e){case"TB":case"TD":p[t]={inPosition:"north",outPosition:"south"};break;case"BT":p[t]={inPosition:"south",outPosition:"north"};break;case"RL":p[t]={inPosition:"east",outPosition:"west"};break;case"LR":p[t]={inPosition:"west",outPosition:"east"}}const s="in"===o?p[t].inPosition:p[t].outPosition;return"in"===o?p[t].inPosition=Z(p[t].inPosition,o,e):p[t].outPosition=Z(p[t].outPosition,o,e),s},lt=function(t,o,e,s,r){const n=function(t,o,e){const s=((t,o,e)=>{const{parentById:s}=e,r=new Set;let n=t;for(;n;){if(r.add(n),n===o)return n;n=s[n]}for(n=o;n;){if(r.has(n))return n;n=s[n]}return"root"})(t,o,e);if(void 0===s||"root"===s)return{x:0,y:0};const r=P[s].offset;return{x:r.posX,y:r.posY}}(o.sources[0],o.targets[0],r),E=o.sections[0].startPoint,l=o.sections[0].endPoint,c=(o.sections[0].bendPoints?o.sections[0].bendPoints:[]).map(y=>[y.x+n.x,y.y+n.y]),b=[[E.x+n.x,E.y+n.y],...c,[l.x+n.x,l.y+n.y]],i=(0,w.jvg)().curve(w.c_6),S=t.insert("path").attr("d",i(b)).attr("class","path").attr("fill","none"),g=t.insert("g").attr("class","edgeLabel"),a=(0,w.Ys)(g.node().appendChild(o.labelEl)),f=a.node().firstChild.getBoundingClientRect();a.attr("width",f.width),a.attr("height",f.height),g.attr("transform",`translate(${o.labels[0].x+n.x}, ${o.labels[0].y+n.y})`),function(t,o,e,s){let r="";switch(s&&(r=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,r=r.replace(/\(/g,"\\("),r=r.replace(/\)/g,"\\)")),o.arrowTypeStart){case"arrow_cross":t.attr("marker-start","url("+r+"#"+e+"-crossStart)");break;case"arrow_point":t.attr("marker-start","url("+r+"#"+e+"-pointStart)");break;case"arrow_barb":t.attr("marker-start","url("+r+"#"+e+"-barbStart)");break;case"arrow_circle":t.attr("marker-start","url("+r+"#"+e+"-circleStart)");break;case"aggregation":t.attr("marker-start","url("+r+"#"+e+"-aggregationStart)");break;case"extension":t.attr("marker-start","url("+r+"#"+e+"-extensionStart)");break;case"composition":t.attr("marker-start","url("+r+"#"+e+"-compositionStart)");break;case"dependency":t.attr("marker-start","url("+r+"#"+e+"-dependencyStart)");break;case"lollipop":t.attr("marker-start","url("+r+"#"+e+"-lollipopStart)")}switch(o.arrowTypeEnd){case"arrow_cross":t.attr("marker-end","url("+r+"#"+e+"-crossEnd)");break;case"arrow_point":t.attr("marker-end","url("+r+"#"+e+"-pointEnd)");break;case"arrow_barb":t.attr("marker-end","url("+r+"#"+e+"-barbEnd)");break;case"arrow_circle":t.attr("marker-end","url("+r+"#"+e+"-circleEnd)");break;case"aggregation":t.attr("marker-end","url("+r+"#"+e+"-aggregationEnd)");break;case"extension":t.attr("marker-end","url("+r+"#"+e+"-extensionEnd)");break;case"composition":t.attr("marker-end","url("+r+"#"+e+"-compositionEnd)");break;case"dependency":t.attr("marker-end","url("+r+"#"+e+"-dependencyEnd)");break;case"lollipop":t.attr("marker-end","url("+r+"#"+e+"-lollipopEnd)")}}(S,e,s.type,s.arrowMarkerAbsolute)},Y=(t,o)=>{t.forEach(e=>{e.children||(e.children=[]);const s=o.childrenById[e.id];s&&s.forEach(r=>{e.children.push(P[r])}),Y(e.children,o)})},st=function(){var t=(0,O.Z)(function*(o,e,s,r){var n;if(!T){const _=(yield d.e("node_modules_elkjs_lib_elk_bundled_js").then(d.t.bind(d,72353,19))).default;T=new _}r.db.clear(),P={},r.db.setGen("gen-2"),r.parser.parse(o);const E=(0,w.Ys)("body").append("div").attr("style","height:400px").attr("id","cy");let l={id:"root",layoutOptions:{"elk.hierarchyHandling":"INCLUDE_CHILDREN","org.eclipse.elk.padding":"[top=100, left=100, bottom=110, right=110]","elk.layered.spacing.edgeNodeBetweenLayers":"30","elk.direction":"DOWN"},children:[],edges:[]};switch(h.l.info("Drawing flowchart using v3 renderer",T),r.db.getDirection()){case"BT":l.layoutOptions["elk.direction"]="UP";break;case"TB":l.layoutOptions["elk.direction"]="DOWN";break;case"LR":l.layoutOptions["elk.direction"]="RIGHT";break;case"RL":l.layoutOptions["elk.direction"]="LEFT"}const{securityLevel:c,flowchart:b}=(0,h.g)();let i;"sandbox"===c&&(i=(0,w.Ys)("#i"+e));const S=(0,w.Ys)("sandbox"===c?i.nodes()[0].contentDocument.body:"body"),g="sandbox"===c?i.nodes()[0].contentDocument:document,a=S.select(`[id="${e}"]`);(0,$.a)(a,["point","circle","cross"],r.type,r.arrowMarkerAbsolute);const y=r.db.getVertices();let C;const m=r.db.getSubGraphs();h.l.info("Subgraphs - ",m);for(let _=m.length-1;_>=0;_--)C=m[_],r.db.addVertex(C.id,C.title,"group",void 0,C.classes,C.dir);const u=a.insert("g").attr("class","subgraphs"),v=function(t){const o={parentById:{},childrenById:{}},e=t.getSubGraphs();return h.l.info("Subgraphs - ",e),e.forEach(function(s){s.nodes.forEach(function(r){o.parentById[r]=s.id,void 0===o.childrenById[s.id]&&(o.childrenById[s.id]=[]),o.childrenById[s.id].push(r)})}),e.forEach(function(s){}),o}(r.db);l=function(t,o,e,s,r,n,E){const l=e.select(`[id="${o}"]`),x=l.insert("g").attr("class","nodes");return Object.keys(t).forEach(function(b){const i=t[b];let S="default";i.classes.length>0&&(S=i.classes.join(" "));const g=(0,B.m)(i.styles);let f,a=void 0!==i.text?i.text:i.id;const y={width:0,height:0};if((0,h.j)((0,h.g)().flowchart.htmlLabels)){const _={label:a.replace(/fa[blrs]?:fa-[\w-]+/g,K=>`<i class='${K.replace(":"," ")}'></i>`)};f=(0,G.a)(l,_).node();const k=f.getBBox();y.width=k.width,y.height=k.height,y.labelNode=f,f.parentNode.removeChild(f)}else{const _=s.createElementNS("http://www.w3.org/2000/svg","text");_.setAttribute("style",g.labelStyle.replace("color:","fill:"));const k=a.split(h.d.lineBreakRegex);for(const ut of k){const N=s.createElementNS("http://www.w3.org/2000/svg","tspan");N.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),N.setAttribute("dy","1em"),N.setAttribute("x","1"),N.textContent=ut,_.appendChild(N)}f=_;const K=f.getBBox();y.width=K.width,y.height=K.height,y.labelNode=f}const C=[{id:i.id+"-west",layoutOptions:{"port.side":"WEST"}},{id:i.id+"-east",layoutOptions:{"port.side":"EAST"}},{id:i.id+"-south",layoutOptions:{"port.side":"SOUTH"}},{id:i.id+"-north",layoutOptions:{"port.side":"NORTH"}}];let m=0,u="",v={};switch(i.type){case"round":m=5,u="rect";break;case"square":case"group":default:u="rect";break;case"diamond":u="question",v={portConstraints:"FIXED_SIDE"};break;case"hexagon":u="hexagon";break;case"odd":case"odd_right":u="rect_left_inv_arrow";break;case"lean_right":u="lean_right";break;case"lean_left":u="lean_left";break;case"trapezoid":u="trapezoid";break;case"inv_trapezoid":u="inv_trapezoid";break;case"circle":u="circle";break;case"ellipse":u="ellipse";break;case"stadium":u="stadium";break;case"subroutine":u="subroutine";break;case"cylinder":u="cylinder";break;case"doublecircle":u="doublecircle"}const R={labelStyle:g.labelStyle,shape:u,labelText:a,rx:m,ry:m,class:S,style:g.style,id:i.id,link:i.link,linkTarget:i.linkTarget,tooltip:r.db.getTooltip(i.id)||"",domId:r.db.lookUpDomId(i.id),haveCallback:i.haveCallback,width:"group"===i.type?500:void 0,dir:i.dir,type:i.type,props:i.props,padding:(0,h.g)().flowchart.padding};let L,W;"group"!==R.type&&(W=(0,$.e)(x,R,i.dir),L=W.node().getBBox());const A={id:i.id,ports:"diamond"===i.type?C:[],layoutOptions:v,labelText:a,labelData:y,domId:r.db.lookUpDomId(i.id),width:L?.width,height:L?.height,type:i.type,el:W,parent:n.parentById[i.id]};P[R.id]=A}),E}(y,e,S,g,r,v,l);const R=a.insert("g").attr("class","edges edgePath"),L=r.db.getEdges();l=function(t,o,e,s){h.l.info("abc78 edges = ",t);const r=s.insert("g").attr("class","edgeLabels");let l,x,n={},E=o.db.getDirection();if(void 0!==t.defaultStyle){const c=(0,B.m)(t.defaultStyle);l=c.style,x=c.labelStyle}return t.forEach(function(c){var b="L-"+c.start+"-"+c.end;void 0===n[b]?(n[b]=0,h.l.info("abc78 new entry",b,n[b])):(n[b]++,h.l.info("abc78 new entry",b,n[b]));let i=b+"-"+n[b];h.l.info("abc78 new link id to be used is",b,i,n[b]);var S="LS-"+c.start,g="LE-"+c.end;const a={style:"",labelStyle:""};switch(a.minlen=c.length||1,a.arrowhead="arrow_open"===c.type?"none":"normal",a.arrowTypeStart="arrow_open",a.arrowTypeEnd="arrow_open",c.type){case"double_arrow_cross":a.arrowTypeStart="arrow_cross";case"arrow_cross":a.arrowTypeEnd="arrow_cross";break;case"double_arrow_point":a.arrowTypeStart="arrow_point";case"arrow_point":a.arrowTypeEnd="arrow_point";break;case"double_arrow_circle":a.arrowTypeStart="arrow_circle";case"arrow_circle":a.arrowTypeEnd="arrow_circle"}let f="",y="";switch(c.stroke){case"normal":f="fill:none;",void 0!==l&&(f=l),void 0!==x&&(y=x),a.thickness="normal",a.pattern="solid";break;case"dotted":a.thickness="normal",a.pattern="dotted",a.style="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":a.thickness="thick",a.pattern="solid",a.style="stroke-width: 3.5px;fill:none;"}if(void 0!==c.style){const v=(0,B.m)(c.style);f=v.style,y=v.labelStyle}a.style=a.style+=f,a.labelStyle=a.labelStyle+=y,a.curve=(0,B.n)(void 0!==c.interpolate?c.interpolate:void 0!==t.defaultInterpolate?t.defaultInterpolate:X.curve,w.c_6),void 0===c.text?void 0!==c.style&&(a.arrowheadStyle="fill: #333"):(a.arrowheadStyle="fill: #333",a.labelpos="c"),a.labelType="text",a.label=c.text.replace(h.d.lineBreakRegex,"\n"),void 0===c.style&&(a.style=a.style||"stroke: #333; stroke-width: 1.5px;fill:none;"),a.labelStyle=a.labelStyle.replace("color:","fill:"),a.id=i,a.classes="flowchart-link "+S+" "+g;const C=(0,$.f)(r,a),{source:m,target:u}=((t,o)=>{let e=t.start,s=t.end;const r=P[e],n=P[s];return r&&n?("diamond"===r.type&&(e=`${e}-${V(e,"out",o)}`),"diamond"===n.type&&(s=`${s}-${V(s,"in",o)}`),{source:e,target:s}):{source:e,target:s}})(c,E);h.l.debug("abc78 source and target",m,u),e.edges.push({id:"e"+c.start+c.end,sources:[m],targets:[u],labelEl:C,labels:[{width:a.width,height:a.height,orgWidth:a.width,orgHeight:a.height,text:a.label,layoutOptions:{"edgeLabels.inline":"true","edgeLabels.placement":"CENTER"}}],edgeData:a})}),e}(L,r,l,a),Object.keys(P).forEach(_=>{const k=P[_];k.parent||l.children.push(k),void 0!==v.childrenById[_]&&(k.labels=[{text:k.labelText,layoutOptions:{"nodeLabels.placement":"[H_CENTER, V_TOP, INSIDE]"},width:k.labelData.width,height:k.labelData.height}],delete k.x,delete k.y,delete k.width,delete k.height)}),Y(l.children,v),h.l.info("after layout",JSON.stringify(l,null,2));const A=yield T.layout(l);J(0,0,A.children,a,u,r,0),h.l.info("after layout",A),null==(n=A.edges)||n.map(_=>{lt(R,_,_.edgeData,r,v)}),(0,U.s)({},a,b.diagramPadding,b.useMaxWidth),E.remove()});return function(e,s,r,n){return t.apply(this,arguments)}}(),J=(t,o,e,s,r,n,E)=>{e.forEach(function(l){if(l)if(P[l.id].offset={posX:l.x+t,posY:l.y+o,x:t,y:o,depth:E,width:l.width,height:l.height},"group"===l.type){const x=r.insert("g").attr("class","subgraph");x.insert("rect").attr("class","subgraph subgraph-lvl-"+E%5+" node").attr("x",l.x+t).attr("y",l.y+o).attr("width",l.width).attr("height",l.height);const c=x.insert("g").attr("class","label");c.attr("transform",`translate(${l.labels[0].x+t+l.x}, ${l.labels[0].y+o+l.y})`),c.node().appendChild(l.labelData.labelNode),h.l.info("Id (UGH)= ",l.type,l.labels)}else h.l.info("Id (UGH)= ",l.id),l.el.attr("transform",`translate(${l.x+t+l.width/2}, ${l.y+o+l.height/2})`)}),e.forEach(function(l){l&&"group"===l.type&&J(t+l.x,o+l.y,l.children,s,r,n,E+1)})},dt={db:I.d,renderer:{getClasses:function(t,o){h.l.info("Extracting classes"),o.db.clear("ver-2");try{return o.parse(t),o.db.getClasses()}catch{return{}}},draw:st},parser:I.p,styles:t=>`.label {\n    font-family: ${t.fontFamily};\n    color: ${t.nodeTextColor||t.textColor};\n  }\n  .cluster-label text {\n    fill: ${t.titleColor};\n  }\n  .cluster-label span {\n    color: ${t.titleColor};\n  }\n\n  .label text,span {\n    fill: ${t.nodeTextColor||t.textColor};\n    color: ${t.nodeTextColor||t.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${t.mainBkg};\n    stroke: ${t.nodeBorder};\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${t.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${t.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${t.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${t.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${t.edgeLabelBackground};\n      fill: ${t.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  .cluster rect {\n    fill: ${t.clusterBkg};\n    stroke: ${t.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${t.titleColor};\n  }\n\n  .cluster span {\n    color: ${t.titleColor};\n  }\n  /* .cluster div {\n    color: ${t.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${t.fontFamily};\n    font-size: 12px;\n    background: ${t.tertiaryColor};\n    border: 1px solid ${t.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${t.textColor};\n  }\n  .subgraph {\n    stroke-width:2;\n    rx:3;\n  }\n  // .subgraph-lvl-1 {\n  //   fill:#ccc;\n  //   // stroke:black;\n  // }\n  ${(t=>{let o="";for(let e=0;e<5;e++)o+=`\n      .subgraph-lvl-${e} {\n        fill: ${t[`surface${e}`]};\n        stroke: ${t[`surfacePeer${e}`]};\n      }\n    `;return o})(t)}\n`}}}]);