{
  "version": 3,
  "file": "metaseed-angular-hotkey.js",
  "sources": [
    "ng://@metaseed/angular-hotkey/projects/angular-hotkey/src/lib/angular-hotkey.module.ts",
    "ng://@metaseed/angular-hotkey/projects/angular-hotkey/src/lib/hotkeys.directive.ts",
    "ng://@metaseed/angular-hotkey/projects/angular-hotkey/src/lib/cheatsheet.component.ts",
    "ng://@metaseed/angular-hotkey/projects/angular-hotkey/src/lib/hotkeys.service.ts",
    "ng://@metaseed/angular-hotkey/projects/angular-hotkey/src/lib/hotkey.model.ts",
    "ng://@metaseed/angular-hotkey/projects/angular-hotkey/src/lib/hotkey.options.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HotkeysDirective } from './hotkeys.directive';\nimport { CheatSheetComponent } from './cheatsheet.component';\nimport { CommonModule } from '@angular/common';\nimport { IHotkeyOptions, HotkeyOptions } from './hotkey.options';\nimport { HotkeysService } from './hotkeys.service';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [HotkeysDirective, CheatSheetComponent],\n  declarations: [HotkeysDirective, CheatSheetComponent]\n})\nexport class HotkeyModule {\n  static forRoot(options: IHotkeyOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: HotkeyModule,\n      providers: [HotkeysService, { provide: HotkeyOptions, useValue: options }]\n    };\n  }\n}\n",
    "import {Directive, Input, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {Hotkey, ExtendedKeyboardEvent} from './hotkey.model';\nimport {HotkeysService} from './hotkeys.service';\nimport 'mousetrap';\n\n@Directive({\n    selector : '[hotkeys]',\n    providers : [HotkeysService]\n})\nexport class HotkeysDirective implements OnInit, OnDestroy {\n    @Input() hotkeys: {[combo: string]: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent}[];\n\n    private mousetrap: MousetrapInstance;\n    private hotkeysList: Hotkey[] = [];\n    private oldHotkeys: Hotkey[] = [];\n\n    constructor(private _hotkeysService: HotkeysService, private _elementRef: ElementRef) {\n        this.mousetrap = new Mousetrap(this._elementRef.nativeElement); // Bind hotkeys to the current element (and any children)\n    }\n\n    ngOnInit() {\n        for (let hotkey of this.hotkeys) {\n            let combo = Object.keys(hotkey)[0];\n            let hotkeyObj: Hotkey = new Hotkey(combo, hotkey[combo]);\n            let oldHotkey: Hotkey = <Hotkey>this._hotkeysService.get(combo);\n            if(oldHotkey !== null) { // We let the user overwrite callbacks temporarily if you specify it in HTML\n                this.oldHotkeys.push(oldHotkey);\n                this._hotkeysService.remove(oldHotkey);\n            }\n            this.hotkeysList.push(hotkeyObj);\n            this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\n        }\n    }\n\n    ngOnDestroy() {\n        for (let hotkey of this.hotkeysList) {\n            this.mousetrap.unbind(hotkey.combo);\n        }\n        this._hotkeysService.add(this.oldHotkeys);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { HotkeysService } from \"./hotkeys.service\";\nimport { Hotkey } from \"./hotkey.model\";\n\n@Component({\n  selector: \"hotkeys-cheatsheet\",\n  styles: [\n    `\n.cfp-hotkeys-container {\n  display: table !important;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  color: #333;\n  font-size: 1em;\n  background-color: rgba(255,255,255,0.9);\n}\n\n.cfp-hotkeys-container.fade {\n  z-index: -1024;\n  visibility: hidden;\n  opacity: 0;\n  -webkit-transition: opacity 0.15s linear;\n  -moz-transition: opacity 0.15s linear;\n  -o-transition: opacity 0.15s linear;\n  transition: opacity 0.15s linear;\n}\n\n.cfp-hotkeys-container.fade.in {\n  z-index: 10002;\n  visibility: visible;\n  opacity: 1;\n}\n\n.cfp-hotkeys-title {\n  font-weight: bold;\n  text-align: center;\n  font-size: 1.2em;\n}\n\n.cfp-hotkeys {\n  width: 100%;\n  height: 100%;\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.cfp-hotkeys table {\n  margin: auto;\n  color: #333;\n}\n\n.cfp-content {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.cfp-hotkeys-keys {\n  padding: 5px;\n  text-align: right;\n}\n\n.cfp-hotkeys-key {\n  display: inline-block;\n  color: #fff;\n  background-color: #333;\n  border: 1px solid #333;\n  border-radius: 5px;\n  text-align: center;\n  margin-right: 5px;\n  box-shadow: inset 0 1px 0 #666, 0 1px 0 #bbb;\n  padding: 5px 9px;\n  font-size: 1em;\n}\n\n.cfp-hotkeys-text {\n  padding-left: 10px;\n  font-size: 1em;\n}\n\n.cfp-hotkeys-close {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  font-size: 2em;\n  font-weight: bold;\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  min-height: 45px;\n  min-width: 45px;\n  text-align: center;\n}\n\n.cfp-hotkeys-close:hover {\n  background-color: #fff;\n  cursor: pointer;\n}\n\n@media all and (max-width: 500px) {\n  .cfp-hotkeys {\n    font-size: 0.8em;\n  }\n}\n\n@media all and (min-width: 750px) {\n  .cfp-hotkeys {\n    font-size: 1.2em;\n  }\n}  `\n  ],\n  template: `<div class=\"cfp-hotkeys-container fade\" [ngClass]=\"{'in': helpVisible}\" style=\"display:none\"><div class=\"cfp-hotkeys\">\n  <h4 class=\"cfp-hotkeys-title\">{{ title }}</h4>\n  <table><tbody>\n    <tr *ngFor=\"let hotkey of hotkeys\">\n      <td class=\"cfp-hotkeys-keys\">\n        <span *ngFor=\"let key of hotkey.formatted\" class=\"cfp-hotkeys-key\">{{ key }}</span>\n      </td>\n      <td class=\"cfp-hotkeys-text\">{{ hotkey.description }}</td>\n    </tr>\n  </tbody></table>\n  <div class=\"cfp-hotkeys-close\" (click)=\"toggleCheatSheet()\">&#215;</div>\n</div></div>`\n})\nexport class CheatSheetComponent implements OnInit, OnDestroy {\n  helpVisible = false;\n  @Input() title = \"Keyboard Shortcuts:\";\n  subscription: any;\n\n  hotkeys: Hotkey[];\n\n  constructor(private hotkeysService: HotkeysService) {}\n\n  public ngOnInit(): void {\n    this.subscription = this.hotkeysService.cheatSheetToggle.subscribe(\n      isOpen => {\n        if (isOpen !== false) {\n          this.hotkeys = this.hotkeysService.hotkeys.filter(\n            hotkey => hotkey.description\n          );\n        }\n\n        if (isOpen === false) {\n          this.helpVisible = false;\n        } else {\n          this.toggleCheatSheet();\n        }\n      }\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  public toggleCheatSheet(): void {\n    this.helpVisible = !this.helpVisible;\n  }\n}\n",
    "import { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport { Subject } from 'rxjs';\nimport { Inject, Injectable } from '@angular/core';\nimport { Hotkey } from './hotkey.model';\nimport 'mousetrap';\n\n@Injectable()\nexport class HotkeysService {\n  hotkeys: Hotkey[] = [];\n  pausedHotkeys: Hotkey[] = [];\n  mousetrap: MousetrapInstance;\n  cheatSheetToggle: Subject<any> = new Subject();\n\n  private _preventIn = ['INPUT', 'SELECT', 'TEXTAREA'];\n\n  constructor(@Inject(HotkeyOptions) private options: IHotkeyOptions) {\n    Mousetrap.prototype.stopCallback = (\n      event: KeyboardEvent,\n      element: HTMLElement,\n      combo: string,\n      callback: Function\n    ) => {\n      // if the element has the class \"mousetrap\" then no need to stop\n      if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n        return false;\n      }\n      return element.contentEditable && element.contentEditable === 'true';\n    };\n    this.mousetrap = new (<any>Mousetrap)();\n    if (!this.options.disableCheatSheet) {\n      this.add(\n        new Hotkey(\n          this.options.cheatSheetHotkey || '?',\n          function(event: KeyboardEvent) {\n            this.cheatSheetToggle.next();\n          }.bind(this),\n          [],\n          this.options.cheatSheetDescription || 'Show / hide this help menu'\n        )\n      );\n    }\n\n    if (this.options.cheatSheetCloseEsc) {\n      this.add(\n        new Hotkey(\n          'esc',\n          function(event: KeyboardEvent) {\n            this.cheatSheetToggle.next(false);\n          }.bind(this),\n          ['HOTKEYS-CHEATSHEET'],\n          'Hide this help menu'\n        )\n      );\n    }\n  }\n\n  add(hotkey: Hotkey | Hotkey[], specificEvent?: string): Hotkey | Hotkey[] {\n    if (Array.isArray(hotkey)) {\n      let temp: Hotkey[] = [];\n      for (let key of hotkey) {\n        temp.push(<Hotkey>this.add(key, specificEvent));\n      }\n      return temp;\n    }\n    this.remove(hotkey);\n    this.hotkeys.push(<Hotkey>hotkey);\n    this.mousetrap.bind(\n      (<Hotkey>hotkey).combo,\n      (event: KeyboardEvent, combo: string) => {\n        let shouldExecute = true;\n\n        // if the callback is executed directly `hotkey.get('w').callback()`\n        // there will be no event, so just execute the callback.\n        if (event) {\n          let target: HTMLElement = <HTMLElement>(event.target || event.srcElement); // srcElement is IE only\n          let nodeName: string = target.nodeName.toUpperCase();\n\n          // check if the input has a mousetrap class, and skip checking preventIn if so\n          if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\n            shouldExecute = true;\n          } else if (\n            this._preventIn.indexOf(nodeName) > -1 &&\n            (<Hotkey>hotkey).allowIn.map(allow => allow.toUpperCase()).indexOf(nodeName) === -1\n          ) {\n            // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\n            shouldExecute = false;\n          }\n        }\n\n        if (shouldExecute) {\n          return (<Hotkey>hotkey).callback.apply(this, [event, combo]);\n        }\n      },\n      specificEvent\n    );\n    return hotkey;\n  }\n\n  remove(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n    let temp: Hotkey[] = [];\n    if (!hotkey) {\n      for (let key of this.hotkeys) {\n        temp.push(<Hotkey>this.remove(key));\n      }\n      return temp;\n    }\n    if (Array.isArray(hotkey)) {\n      for (let key of hotkey) {\n        temp.push(<Hotkey>this.remove(key));\n      }\n      return temp;\n    }\n    let index = this.findHotkey(<Hotkey>hotkey);\n    if (index > -1) {\n      this.hotkeys.splice(index, 1);\n      this.mousetrap.unbind((<Hotkey>hotkey).combo);\n      return hotkey;\n    }\n    return null;\n  }\n\n  get(combo?: string | string[]): Hotkey | Hotkey[] {\n    if (!combo) {\n      return this.hotkeys;\n    }\n    if (Array.isArray(combo)) {\n      let temp: Hotkey[] = [];\n      for (let key of combo) {\n        temp.push(<Hotkey>this.get(key));\n      }\n      return temp;\n    }\n    for (let i = 0; i < this.hotkeys.length; i++) {\n      if (this.hotkeys[i].combo.indexOf(<string>combo) > -1) {\n        return this.hotkeys[i];\n      }\n    }\n    return null;\n  }\n\n  pause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n    if (!hotkey) {\n      return this.pause(this.hotkeys);\n    }\n    if (Array.isArray(hotkey)) {\n      let temp: Hotkey[] = [];\n      for (let key of hotkey) {\n        temp.push(<Hotkey>this.pause(key));\n      }\n      return temp;\n    }\n    this.remove(hotkey);\n    this.pausedHotkeys.push(<Hotkey>hotkey);\n    return hotkey;\n  }\n\n  unpause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n    if (!hotkey) {\n      return this.unpause(this.pausedHotkeys);\n    }\n    if (Array.isArray(hotkey)) {\n      let temp: Hotkey[] = [];\n      for (let key of hotkey) {\n        temp.push(<Hotkey>this.unpause(key));\n      }\n      return temp;\n    }\n    let index: number = this.pausedHotkeys.indexOf(<Hotkey>hotkey);\n    if (index > -1) {\n      this.add(hotkey);\n      return this.pausedHotkeys.splice(index, 1);\n    }\n    return null;\n  }\n\n  reset() {\n    this.mousetrap.reset();\n  }\n\n  private findHotkey(hotkey: Hotkey): number {\n    return this.hotkeys.indexOf(hotkey);\n  }\n}\n",
    "export interface ExtendedKeyboardEvent extends KeyboardEvent {\n  returnValue: boolean; // IE returnValue\n}\n\nexport class Hotkey {\n  _formatted: string[];\n\n  static symbolize(combo: string): string {\n    let map: any = {\n      command: \"\\u2318\", // ⌘\n      shift: \"\\u21E7\", // ⇧\n      left: \"\\u2190\", // ←\n      right: \"\\u2192\", // →\n      up: \"\\u2191\", // ↑\n      down: \"\\u2193\", // ↓\n      return: \"\\u23CE\", // ⏎\n      backspace: \"\\u232B\" // ⌫\n    };\n    let comboSplit: string[] = combo.split(\"+\");\n\n    for (let i = 0; i < comboSplit.length; i++) {\n      // try to resolve command / ctrl based on OS:\n      if (comboSplit[i] === \"mod\") {\n        if (window.navigator && window.navigator.platform.indexOf(\"Mac\") >= 0) {\n          comboSplit[i] = \"command\";\n        } else {\n          comboSplit[i] = \"ctrl\";\n        }\n      }\n\n      comboSplit[i] = map[comboSplit[i]] || comboSplit[i];\n    }\n\n    return comboSplit.join(\" + \");\n  }\n\n  /**\n   * Creates a new Hotkey for Mousetrap binding\n   *\n   * @param  combo       mousetrap key binding\n   * @param   description description for the help menu\n   * @param  callback    method to call when key is pressed\n   * @param   action      the type of event to listen for (for mousetrap)\n   * @param     allowIn     an array of tag names to allow this combo in ('INPUT', 'SELECT', and/or 'TEXTAREA')\n   * @param  persistent  if true, the binding is preserved upon route changes\n   */\n  constructor(\n    public combo: string | string[],\n    public callback: (\n      event: KeyboardEvent,\n      combo: string\n    ) => ExtendedKeyboardEvent | boolean,\n    public allowIn?: string[],\n    public description?: string | Function,\n    public action?: string,\n    public persistent?: boolean\n  ) {\n    this.combo = Array.isArray(combo) ? combo : [<string>combo];\n    this.allowIn = allowIn || [];\n    this.description = description || \"\";\n  }\n\n  get formatted(): string[] {\n    if (!this._formatted) {\n      let combo: string = this.combo[0];\n      let sequence: string[] = combo.split(/[\\s]/);\n      for (let i = 0; i < sequence.length; i++) {\n        sequence[i] = Hotkey.symbolize(sequence[i]);\n      }\n      this._formatted = sequence;\n    }\n    return this._formatted;\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface IHotkeyOptions {\n  /**\n   * Disable the cheat sheet popover dialog? Default: false\n   */\n  disableCheatSheet?: boolean;\n  /**\n   * Key combination to trigger the cheat sheet. Default: '?'\n   */\n  cheatSheetHotkey?: string;\n\n  /**\n   * Use also ESC for closing the cheat sheet. Default: false\n   */\n  cheatSheetCloseEsc?: boolean;\n  /**\n   * Description for the cheat sheet hot key in the cheat sheet. Default: 'Show / hide this help menu'\n   */\n  cheatSheetDescription?: string;\n}\n\nexport const HotkeyOptions = new InjectionToken<IHotkeyOptions>('HotkeyOptions');\n"
  ],
  "names": [],
  "mappings": ";;;;;;;;;AKAA,AAsBA,MAAA,iBAAa,aAAa,GAAG,IAAI,cAAc,CAAiB,eAAe,CAAC;;;;;;ADlBhF,MAAA,MAAA,CAAA;;;;;;;;;;;IA0CE,WAAF,CACW,KADX,EAEW,QAFX,EAMW,OANX,EAOW,WAPX,EAQW,MARX,EASW,UATX,EAAA;QACW,IAAX,CAAA,KAAgB,GAAL,KAAK,CAAhB;QACW,IAAX,CAAA,QAAmB,GAAR,QAAQ,CAAnB;QAIW,IAAX,CAAA,OAAkB,GAAP,OAAO,CAAlB;QACW,IAAX,CAAA,WAAsB,GAAX,WAAW,CAAtB;QACW,IAAX,CAAA,MAAiB,GAAN,MAAM,CAAjB;QACW,IAAX,CAAA,UAAqB,GAAV,UAAU,CAArB;QAEI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,mBAAS,KAAK,EAAC,CAAC;QAC5D,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;KACtC;;;;;IArDD,OAAO,SAAS,CAAC,KAAa,EAAhC;QACI,qBAAI,GAAG,GAAQ;YACb,OAAO,EAAE,QAAQ;;YACjB,KAAK,EAAE,QAAQ;;YACf,IAAI,EAAE,QAAQ;;YACd,KAAK,EAAE,QAAQ;;YACf,EAAE,EAAE,QAAQ;;YACZ,IAAI,EAAE,QAAQ;;YACd,MAAM,EAAE,QAAQ;;YAChB,SAAS,EAAE,QAAQ;SACpB,CAAC;QACF,qBAAI,UAAU,GAAa,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE5C,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;YAE1C,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;gBAC3B,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;oBACrE,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;iBAC3B;qBAAM;oBACL,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;iBACxB;aACF;YAED,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;SACrD;QAED,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;;;;IA4BD,IAAI,SAAS,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,qBAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,qBAAI,QAAQ,GAAa,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC7C,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;CACF;;;;;;ADzED,AAOA,MAAA,cAAA,CAAA;;;;IAQE,WAAF,CAA6C,OAA7C,EAAA;QAA6C,IAA7C,CAAA,OAAoD,GAAP,OAAO,CAApD;QAPA,IAAA,CAAA,OAAA,GAAsB,EAAE,CAAxB;QACA,IAAA,CAAA,aAAA,GAA4B,EAAE,CAA9B;QAEA,IAAA,CAAA,gBAAA,GAAmC,IAAI,OAAO,EAAE,CAAhD;QAEA,IAAA,CAAA,UAAA,GAAuB,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAtD;QAGI,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,CACjC,KAAoB,EACpB,OAAoB,EACpB,KAAa,EACb,QAAkB,KAJxB;;YAOM,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,SAAS,GAAG,GAAG,EAAE,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC/D,OAAO,KAAK,CAAC;aACd;YACD,OAAO,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,eAAe,KAAK,MAAM,CAAC;SACtE,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,uBAAU,SAAS,IAAG,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;YACnC,IAAI,CAAC,GAAG,CACN,IAAI,MAAM,CACR,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,GAAG,EACpC,UAAS,KAAoB,EAHvC;gBAIY,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;aAC9B,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,qBAAqB,IAAI,4BAA4B,CACnE,CACF,CAAC;SACH;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;YACnC,IAAI,CAAC,GAAG,CACN,IAAI,MAAM,CACR,KAAK,EACL,UAAS,KAAoB,EAHvC;gBAIY,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,CAAC,oBAAoB,CAAC,EACtB,qBAAqB,CACtB,CACF,CAAC;SACH;KACF;;;;;;IAED,GAAG,CAAC,MAAyB,EAAE,aAAsB,EAAvD;QACI,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,qBAAI,IAAI,GAAa,EAAE,CAAC;YACxB,KAAK,qBAAI,GAAG,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,IAAI,mBAAS,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,EAAC,CAAC;aACjD;YACD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,mBAAS,MAAM,EAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,mBAAS,MAAM,GAAE,KAAK,EACtB,CAAC,KAAoB,EAAE,KAAa,KAF1C;YAGQ,qBAAI,aAAa,GAAG,IAAI,CAAC;;;YAIzB,IAAI,KAAK,EAAE;gBACT,qBAAI,MAAM,sBAA8B,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,EAAC,CAAC;gBAC1E,qBAAI,QAAQ,GAAW,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;;gBAGrD,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC9D,aAAa,GAAG,IAAI,CAAC;iBACtB;qBAAM,IACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACtC,mBAAS,MAAM,GAAE,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CACpF,EAAE;;oBAEA,aAAa,GAAG,KAAK,CAAC;iBACvB;aACF;YAED,IAAI,aAAa,EAAE;gBACjB,OAAO,mBAAS,MAAM,GAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;aAC9D;SACF,EACD,aAAa,CACd,CAAC;QACF,OAAO,MAAM,CAAC;KACf;;;;;IAED,MAAM,CAAC,MAA0B,EAAnC;QACI,qBAAI,IAAI,GAAa,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE;YACX,KAAK,qBAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC5B,IAAI,CAAC,IAAI,mBAAS,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC;aACrC;YACD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,KAAK,qBAAI,GAAG,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,IAAI,mBAAS,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC;aACrC;YACD,OAAO,IAAI,CAAC;SACb;QACD,qBAAI,KAAK,GAAG,IAAI,CAAC,UAAU,mBAAS,MAAM,EAAC,CAAC;QAC5C,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAS,MAAM,GAAE,KAAK,CAAC,CAAC;YAC9C,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,GAAG,CAAC,KAAyB,EAA/B;QACI,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,qBAAI,IAAI,GAAa,EAAE,CAAC;YACxB,KAAK,qBAAI,GAAG,IAAI,KAAK,EAAE;gBACrB,IAAI,CAAC,IAAI,mBAAS,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC;aAClC;YACD,OAAO,IAAI,CAAC;SACb;QACD,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,mBAAS,KAAK,EAAC,GAAG,CAAC,CAAC,EAAE;gBACrD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACxB;SACF;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,KAAK,CAAC,MAA0B,EAAlC;QACI,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,qBAAI,IAAI,GAAa,EAAE,CAAC;YACxB,KAAK,qBAAI,GAAG,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,IAAI,mBAAS,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC,CAAC;aACpC;YACD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,mBAAS,MAAM,EAAC,CAAC;QACxC,OAAO,MAAM,CAAC;KACf;;;;;IAED,OAAO,CAAC,MAA0B,EAApC;QACI,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACzC;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,qBAAI,IAAI,GAAa,EAAE,CAAC;YACxB,KAAK,qBAAI,GAAG,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,IAAI,mBAAS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,CAAC;aACtC;YACD,OAAO,IAAI,CAAC;SACb;QACD,qBAAI,KAAK,GAAW,IAAI,CAAC,aAAa,CAAC,OAAO,mBAAS,MAAM,EAAC,CAAC;QAC/D,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;KACb;;;;IAED,KAAK,GAAP;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;;;;IAEO,UAAU,CAAC,MAAc,EAAnC;QACI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;IA9KxC,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IASA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,MAAM,EAArB,IAAA,EAAA,CAAsB,aAAa,EAAnC,EAAA,EAAA,EAAA;;;;;;;ADfA,AA8HA,MAAA,mBAAA,CAAA;;;;IAOE,WAAF,CAAsB,cAA8B,EAApD;QAAsB,IAAtB,CAAA,cAAoC,GAAd,cAAc,CAAgB;QANpD,IAAA,CAAA,WAAA,GAAgB,KAAK,CAArB;QACA,IAAA,CAAA,KAAA,GAAmB,qBAAqB,CAAxC;KAKwD;;;;IAE/C,QAAQ,GAAjB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAChE,MAAM,IADZ;YAEQ,IAAI,MAAM,KAAK,KAAK,EAAE;gBACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAC/C,MAAM,IAAI,MAAM,CAAC,WAAW,CAC7B,CAAC;aACH;YAED,IAAI,MAAM,KAAK,KAAK,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;SACF,CACF,CAAC;;;;;IAGG,WAAW,GAApB;QACI,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;;;;;IAGI,gBAAgB,GAAzB;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;;;;IA5JzC,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,MAAM,EAAE;oBACN,CAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwGA,CAAI;iBACD;gBACD,QAAQ,EAAE,CAAZ;;;;;;;;;;;YAWA,CAAa;aACZ,EAAD,EAAA;;;;IA5HA,EAAA,IAAA,EAAS,cAAc,GAAvB;;;IA+HA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;;;;;;;ADhIA,AASA,MAAA,gBAAA,CAAA;;;;;IAOI,WAAJ,CAAwB,eAA+B,EAAU,WAAuB,EAAxF;QAAwB,IAAxB,CAAA,eAAuC,GAAf,eAAe,CAAgB;QAAU,IAAjE,CAAA,WAA4E,GAAX,WAAW,CAAY;QAHxF,IAAA,CAAA,WAAA,GAAoC,EAAE,CAAtC;QACA,IAAA,CAAA,UAAA,GAAmC,EAAE,CAArC;QAGQ,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KAClE;;;;IAED,QAAQ,GAAZ;QACQ,KAAK,qBAAI,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YAC7B,qBAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,qBAAI,SAAS,GAAW,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,qBAAI,SAAS,qBAAmB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,CAAC;YAChE,IAAG,SAAS,KAAK,IAAI,EAAE;;gBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC5D;KACJ;;;;IAED,WAAW,GAAf;QACQ,KAAK,qBAAI,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YACjC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC7C;;;IAlCL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAG,WAAW;gBACtB,SAAS,EAAG,CAAC,cAAc,CAAC;aAC/B,EAAD,EAAA;;;;IANA,EAAA,IAAA,EAAQ,cAAc,GAAtB;IAFA,EAAA,IAAA,EAA6C,UAAU,GAAvD;;;IAUA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;;;;;;;ADVA,AAYA,MAAA,YAAA,CAAA;;;;;IACE,OAAO,OAAO,CAAC,OAAjB,GAA2C,EAAE,EAA7C;QACI,OAAO;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;SAC3E,CAAC;KACH;;;IAXH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;gBAChD,YAAY,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;aACtD,EAAD,EAAA;;;;;;;;;;;;;;;"
}
