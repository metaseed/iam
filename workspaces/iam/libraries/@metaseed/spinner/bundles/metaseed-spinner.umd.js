(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@metaseed/spinner', ['exports', '@angular/core', '@angular/common'], factory) :
    (factory((global.metaseed = global.metaseed || {}, global.metaseed.spinner = {}),global.ng.core,global.ng.common));
}(this, (function (exports,core,common) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b)
            if (b.hasOwnProperty(p))
                d[p] = b[p]; };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var SpinnerComponent = (function () {
        function SpinnerComponent() {
            this.visible = true;
            this.baseClass = 'chasing-dots-spinner';
            this.childClass = 'dot';
            this.numItems = 2;
            this.delay = 0;
            this.color = '#333';
        }
        Object.defineProperty(SpinnerComponent.prototype, "isRunning", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                var _this = this;
                if (!value) {
                    this.cancel();
                    this.visible = false;
                    return;
                }
                if (this.timeout) {
                    return;
                }
                this.timeout = setTimeout(function () {
                    _this.visible = true;
                    _this.cancel();
                }, this.delay);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        SpinnerComponent.prototype.cancel = /**
         * @return {?}
         */
            function () {
                clearTimeout(this.timeout);
                this.timeout = undefined;
            };
        Object.defineProperty(SpinnerComponent.prototype, "items", {
            get: /**
             * @return {?}
             */ function () {
                return Array(this.numItems);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        SpinnerComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.cancel();
            };
        SpinnerComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'spinner',
                        template: ''
                    },] },
        ];
        /** @nocollapse */
        SpinnerComponent.propDecorators = {
            "delay": [{ type: core.Input },],
            "color": [{ type: core.Input },],
            "isRunning": [{ type: core.Input },],
        };
        return SpinnerComponent;
    }());
    var /** @type {?} */ SpinnerTemplate = "\n  <div [hidden]=\"!visible\" [ngClass]=\"baseClass\">\n      <div *ngFor=\"let item of items; let i = index\" [ngClass]=\"childClass + (i+1)\" [style.backgroundColor]=\"color\"></div>\n  </div>\n";

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var WanderingCubesComponent = (function (_super) {
        __extends(WanderingCubesComponent, _super);
        function WanderingCubesComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'wandering-cubes-spinner';
            _this.childClass = 'cube';
            _this.numItems = 2;
            return _this;
        }
        WanderingCubesComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-wandering-cubes',
                        styles: ["\n    .wandering-cubes-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n    }\n    \n    .cube1,\n    .cube2 {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 15px;\n      height: 15px;\n      \n      -webkit-animation: sk-cubemove 1.8s infinite ease-in-out;\n      animation: sk-cubemove 1.8s infinite ease-in-out;\n    }\n    \n    .cube2 {\n      -webkit-animation-delay: -0.9s;\n      animation-delay: -0.9s;\n    }\n    \n    @-webkit-keyframes sk-cubemove {\n      25% {\n        -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n      }\n      50% {\n        -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n      }\n      75% {\n        -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n      }\n      100% {\n        -webkit-transform: rotate(-360deg);\n      }\n    }\n    \n    @keyframes sk-cubemove {\n      25% {\n        transform: translateX(42px) rotate(-90deg) scale(0.5);\n        -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n      }\n      50% {\n        transform: translateX(42px) translateY(42px) rotate(-179deg);\n        -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n      }\n      50.1% {\n        transform: translateX(42px) translateY(42px) rotate(-180deg);\n        -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n      }\n      75% {\n        transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n        -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n      }\n      100% {\n        transform: rotate(-360deg);\n        -webkit-transform: rotate(-360deg);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return WanderingCubesComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var PulseComponent = (function (_super) {
        __extends(PulseComponent, _super);
        function PulseComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        PulseComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-pulse',
                        styles: ["\n    .pulse-spinner {\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n      border-radius: 100%;\n      \n      -webkit-animation: sk-scaleout 1.0s infinite ease-in-out;\n      animation: sk-scaleout 1.0s infinite ease-in-out;\n    }\n    \n    @-webkit-keyframes sk-scaleout {\n      0% {\n        -webkit-transform: scale(0);\n      }\n      100% {\n        -webkit-transform: scale(1.0);\n        opacity: 0;\n      }\n    }\n    \n    @keyframes sk-scaleout {\n      0% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      }\n      100% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n        opacity: 0;\n      }\n    }\n  "],
                        template: "\n    <div [hidden]=\"!visible\" class=\"pulse-spinner\" [style.backgroundColor]=\"color\"></div>\n  "
                    },] },
        ];
        return PulseComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var ChasingDotsComponent = (function (_super) {
        __extends(ChasingDotsComponent, _super);
        function ChasingDotsComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'chasing-dots-spinner';
            _this.childClass = 'dot';
            _this.numItems = 2;
            return _this;
        }
        ChasingDotsComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-chasing-dots',
                        styles: ["\n    .chasing-dots-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n      \n      -webkit-animation: sk-rotate 2.0s infinite linear;\n      animation: sk-rotate 2.0s infinite linear;\n    }\n    \n    .dot1,\n    .dot2 {\n      position: absolute;\n      top: 0;\n      display: inline-block;\n      width: 60%;\n      height: 60%;\n      border-radius: 100%;\n      \n      -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\n      animation: sk-bounce 2.0s infinite ease-in-out;\n    }\n    \n    .dot2 {\n      top: auto;\n      bottom: 0;\n      -webkit-animation-delay: -1.0s;\n      animation-delay: -1.0s;\n    }\n    \n    @-webkit-keyframes sk-rotate {\n      100% {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    \n    @keyframes sk-rotate {\n      100% {\n        transform: rotate(360deg);\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    \n    @-webkit-keyframes sk-bounce {\n      0%, 100% {\n        -webkit-transform: scale(0.0);\n      }\n      50% {\n        -webkit-transform: scale(1.0);\n      }\n    }\n    \n    @keyframes sk-bounce {\n      0%, 100% {\n        transform: scale(0.0);\n        -webkit-transform: scale(0.0);\n      }\n      50% {\n        transform: scale(1.0);\n        -webkit-transform: scale(1.0);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return ChasingDotsComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CircleComponent = (function (_super) {
        __extends(CircleComponent, _super);
        function CircleComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'circle-spinner';
            _this.childClass = 'circle';
            _this.numItems = 12;
            return _this;
        }
        CircleComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-circle',
                        styles: ["\n    .circle-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n    }\n    \n    .circle-spinner > div {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: transparent !important;\n    }\n    \n    .circle-spinner div:before {\n      display: block;\n      margin: 0 auto;\n      width: 15%;\n      height: 15%;\n      border-radius: 100%;\n      background-color: #333;\n      content: '';\n      -webkit-animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\n      animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\n    }\n    \n    .circle-spinner .circle2 {\n      -webkit-transform: rotate(30deg);\n      -ms-transform: rotate(30deg);\n      transform: rotate(30deg);\n    }\n    \n    .circle-spinner .circle3 {\n      -webkit-transform: rotate(60deg);\n      -ms-transform: rotate(60deg);\n      transform: rotate(60deg);\n    }\n    \n    .circle-spinner .circle4 {\n      -webkit-transform: rotate(90deg);\n      -ms-transform: rotate(90deg);\n      transform: rotate(90deg);\n    }\n    \n    .circle-spinner .circle5 {\n      -webkit-transform: rotate(120deg);\n      -ms-transform: rotate(120deg);\n      transform: rotate(120deg);\n    }\n    \n    .circle-spinner .circle6 {\n      -webkit-transform: rotate(150deg);\n      -ms-transform: rotate(150deg);\n      transform: rotate(150deg);\n    }\n    \n    .circle-spinner .circle7 {\n      -webkit-transform: rotate(180deg);\n      -ms-transform: rotate(180deg);\n      transform: rotate(180deg);\n    }\n    \n    .circle-spinner .circle8 {\n      -webkit-transform: rotate(210deg);\n      -ms-transform: rotate(210deg);\n      transform: rotate(210deg);\n    }\n    \n    .circle-spinner .circle9 {\n      -webkit-transform: rotate(240deg);\n      -ms-transform: rotate(240deg);\n      transform: rotate(240deg);\n    }\n    \n    .circle-spinner .circle10 {\n      -webkit-transform: rotate(270deg);\n      -ms-transform: rotate(270deg);\n      transform: rotate(270deg);\n    }\n    \n    .circle-spinner .circle11 {\n      -webkit-transform: rotate(300deg);\n      -ms-transform: rotate(300deg);\n      transform: rotate(300deg);\n    }\n    \n    .circle-spinner .circle12 {\n      -webkit-transform: rotate(330deg);\n      -ms-transform: rotate(330deg);\n      transform: rotate(330deg);\n    }\n    \n    .circle-spinner .circle2:before {\n      -webkit-animation-delay: -1.1s;\n      animation-delay: -1.1s;\n    }\n    \n    .circle-spinner .circle3:before {\n      -webkit-animation-delay: -1s;\n      animation-delay: -1s;\n    }\n    \n    .circle-spinner .circle4:before {\n      -webkit-animation-delay: -0.9s;\n      animation-delay: -0.9s;\n    }\n    \n    .circle-spinner .circle5:before {\n      -webkit-animation-delay: -0.8s;\n      animation-delay: -0.8s;\n    }\n    \n    .circle-spinner .circle6:before {\n      -webkit-animation-delay: -0.7s;\n      animation-delay: -0.7s;\n    }\n    \n    .circle-spinner .circle7:before {\n      -webkit-animation-delay: -0.6s;\n      animation-delay: -0.6s;\n    }\n    \n    .circle-spinner .circle8:before {\n      -webkit-animation-delay: -0.5s;\n      animation-delay: -0.5s;\n    }\n    \n    .circle-spinner .circle9:before {\n      -webkit-animation-delay: -0.4s;\n      animation-delay: -0.4s;\n    }\n    \n    .circle-spinner .circle10:before {\n      -webkit-animation-delay: -0.3s;\n      animation-delay: -0.3s;\n    }\n    \n    .circle-spinner .circle11:before {\n      -webkit-animation-delay: -0.2s;\n      animation-delay: -0.2s;\n    }\n    \n    .circle-spinner .circle12:before {\n      -webkit-animation-delay: -0.1s;\n      animation-delay: -0.1s;\n    }\n    \n    @-webkit-keyframes sk-circleBounceDelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      }\n      40% {\n        -webkit-transform: scale(1);\n        transform: scale(1);\n      }\n    }\n    \n    @keyframes sk-circleBounceDelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      }\n      40% {\n        -webkit-transform: scale(1);\n        transform: scale(1);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return CircleComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var ThreeBounceComponent = (function (_super) {
        __extends(ThreeBounceComponent, _super);
        function ThreeBounceComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'three-bounce-spinner';
            _this.childClass = 'bounce';
            _this.numItems = 3;
            return _this;
        }
        ThreeBounceComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-three-bounce',
                        styles: ["\n    .three-bounce-spinner {\n      margin: 25px auto;\n      width: 70px;\n    }\n    \n    .three-bounce-spinner > div {\n      display: inline-block;\n      width: 18px;\n      height: 18px;\n      \n      border-radius: 100%;\n      -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n      animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n    }\n    \n    .three-bounce-spinner .bounce1 {\n      -webkit-animation-delay: -0.32s;\n      animation-delay: -0.32s;\n    }\n    \n    .three-bounce-spinner .bounce2 {\n      -webkit-animation-delay: -0.16s;\n      animation-delay: -0.16s;\n    }\n    \n    @-webkit-keyframes sk-bouncedelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n      }\n      40% {\n        -webkit-transform: scale(1.0);\n      }\n    }\n    \n    @keyframes sk-bouncedelay {\n      0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n      }\n      40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return ThreeBounceComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CubeGridComponent = (function (_super) {
        __extends(CubeGridComponent, _super);
        function CubeGridComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'cube-grid-spinner';
            _this.childClass = 'cube';
            _this.numItems = 9;
            return _this;
        }
        CubeGridComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-cube-grid',
                        styles: ["\n    .cube-grid-spinner {\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n    }\n    \n    .cube-grid-spinner div {\n      float: left;\n      width: 33%;\n      height: 33%;\n      \n      -webkit-animation: cubeGridScaleDelay 1.3s infinite ease-in-out;\n      animation: cubeGridScaleDelay 1.3s infinite ease-in-out;\n    }\n    \n    .cube-grid-spinner .cube1 {\n      -webkit-animation-delay: 0.2s;\n      animation-delay: 0.2s;\n    }\n    \n    .cube-grid-spinner .cube2 {\n      -webkit-animation-delay: 0.3s;\n      animation-delay: 0.3s;\n    }\n    \n    .cube-grid-spinner .cube3 {\n      -webkit-animation-delay: 0.4s;\n      animation-delay: 0.4s;\n    }\n    \n    .cube-grid-spinner .cube4 {\n      -webkit-animation-delay: 0.1s;\n      animation-delay: 0.1s;\n    }\n    \n    .cube-grid-spinner .cube5 {\n      -webkit-animation-delay: 0.2s;\n      animation-delay: 0.2s;\n    }\n    \n    .cube-grid-spinner .cube6 {\n      -webkit-animation-delay: 0.3s;\n      animation-delay: 0.3s;\n    }\n    \n    .cube-grid-spinner .cube7 {\n      -webkit-animation-delay: 0s;\n      animation-delay: 0s;\n    }\n    \n    .cube-grid-spinner .cube8 {\n      -webkit-animation-delay: 0.1s;\n      animation-delay: 0.1s;\n    }\n    \n    .cube-grid-spinner .cube9 {\n      -webkit-animation-delay: 0.2s;\n      animation-delay: 0.2s;\n    }\n    \n    @-webkit-keyframes cubeGridScaleDelay {\n      0%, 70%, 100% {\n        -webkit-transform: scale3D(1, 1, 1);\n        transform: scale3D(1, 1, 1);\n      }\n      35% {\n        -webkit-transform: scale3D(0, 0, 1);\n        transform: scale3D(0, 0, 1);\n      }\n    }\n    \n    @keyframes cubeGridScaleDelay {\n      0%, 70%, 100% {\n        -webkit-transform: scale3D(1, 1, 1);\n        transform: scale3D(1, 1, 1);\n      }\n      35% {\n        -webkit-transform: scale3D(0, 0, 1);\n        transform: scale3D(0, 0, 1);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return CubeGridComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var WordPressComponent = (function (_super) {
        __extends(WordPressComponent, _super);
        function WordPressComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        WordPressComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-word-press',
                        styles: ["\n    .word-press-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 30px;\n      height: 30px;\n      border-radius: 30px;\n      \n      -webkit-animation: inner-circle 1s linear infinite;\n      animation: inner-circle 1s linear infinite;\n    }\n    \n    .inner-circle {\n      position: absolute;\n      top: 5px;\n      left: 5px;\n      display: block;\n      width: 8px;\n      height: 8px;\n      border-radius: 8px;\n      background: #fff;\n    }\n    \n    @-webkit-keyframes inner-circle {\n      0% {\n        -webkit-transform: rotate(0);\n      }\n      100% {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    \n    @keyframes inner-circle {\n      0% {\n        transform: rotate(0);\n        -webkit-transform: rotate(0);\n      }\n      100% {\n        transform: rotate(360deg);\n        -webkit-transform: rotate(360deg);\n      }\n    }\n  "],
                        template: "\n    <div [hidden]=\"!visible\" class=\"word-press-spinner\" [style.backgroundColor]=\"color\">\n      <span class=\"inner-circle\"></span>\n    </div>\n  "
                    },] },
        ];
        return WordPressComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var FadingCircleComponent = (function (_super) {
        __extends(FadingCircleComponent, _super);
        function FadingCircleComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'fading-circle-spinner';
            _this.childClass = 'circle';
            _this.numItems = 12;
            return _this;
        }
        FadingCircleComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-fading-circle',
                        styles: ["\n    .fading-circle-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n    }\n    \n    .fading-circle-spinner div {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: transparent !important;\n    }\n    \n    .fading-circle-spinner div:before {\n      display: block;\n      margin: 0 auto;\n      width: 15%;\n      height: 15%;\n      border-radius: 100%;\n      background-color: #333;\n      content: '';\n      -webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\n      animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\n    }\n    \n    .fading-circle-spinner .circle2 {\n      -webkit-transform: rotate(30deg);\n      -ms-transform: rotate(30deg);\n      transform: rotate(30deg);\n    }\n    \n    .fading-circle-spinner .circle3 {\n      -webkit-transform: rotate(60deg);\n      -ms-transform: rotate(60deg);\n      transform: rotate(60deg);\n    }\n    \n    .fading-circle-spinner .circle4 {\n      -webkit-transform: rotate(90deg);\n      -ms-transform: rotate(90deg);\n      transform: rotate(90deg);\n    }\n    \n    .fading-circle-spinner .circle5 {\n      -webkit-transform: rotate(120deg);\n      -ms-transform: rotate(120deg);\n      transform: rotate(120deg);\n    }\n    \n    .fading-circle-spinner .circle6 {\n      -webkit-transform: rotate(150deg);\n      -ms-transform: rotate(150deg);\n      transform: rotate(150deg);\n    }\n    \n    .fading-circle-spinner .circle7 {\n      -webkit-transform: rotate(180deg);\n      -ms-transform: rotate(180deg);\n      transform: rotate(180deg);\n    }\n    \n    .fading-circle-spinner .circle8 {\n      -webkit-transform: rotate(210deg);\n      -ms-transform: rotate(210deg);\n      transform: rotate(210deg);\n    }\n    \n    .fading-circle-spinner .circle9 {\n      -webkit-transform: rotate(240deg);\n      -ms-transform: rotate(240deg);\n      transform: rotate(240deg);\n    }\n    \n    .fading-circle-spinner .circle10 {\n      -webkit-transform: rotate(270deg);\n      -ms-transform: rotate(270deg);\n      transform: rotate(270deg);\n    }\n    \n    .fading-circle-spinner .circle11 {\n      -webkit-transform: rotate(300deg);\n      -ms-transform: rotate(300deg);\n      transform: rotate(300deg);\n    }\n    \n    .fading-circle-spinner .circle12 {\n      -webkit-transform: rotate(330deg);\n      -ms-transform: rotate(330deg);\n      transform: rotate(330deg);\n    }\n    \n    .fading-circle-spinner .circle2:before {\n      -webkit-animation-delay: -1.1s;\n      animation-delay: -1.1s;\n    }\n    \n    .fading-circle-spinner .circle3:before {\n      -webkit-animation-delay: -1s;\n      animation-delay: -1s;\n    }\n    \n    .fading-circle-spinner .circle4:before {\n      -webkit-animation-delay: -0.9s;\n      animation-delay: -0.9s;\n    }\n    \n    .fading-circle-spinner .circle5:before {\n      -webkit-animation-delay: -0.8s;\n      animation-delay: -0.8s;\n    }\n    \n    .fading-circle-spinner .circle6:before {\n      -webkit-animation-delay: -0.7s;\n      animation-delay: -0.7s;\n    }\n    \n    .fading-circle-spinner .circle7:before {\n      -webkit-animation-delay: -0.6s;\n      animation-delay: -0.6s;\n    }\n    \n    .fading-circle-spinner .circle8:before {\n      -webkit-animation-delay: -0.5s;\n      animation-delay: -0.5s;\n    }\n    \n    .fading-circle-spinner .circle9:before {\n      -webkit-animation-delay: -0.4s;\n      animation-delay: -0.4s;\n    }\n    \n    .fading-circle-spinner .circle10:before {\n      -webkit-animation-delay: -0.3s;\n      animation-delay: -0.3s;\n    }\n    \n    .fading-circle-spinner .circle11:before {\n      -webkit-animation-delay: -0.2s;\n      animation-delay: -0.2s;\n    }\n    \n    .fading-circle-spinner .circle12:before {\n      -webkit-animation-delay: -0.1s;\n      animation-delay: -0.1s;\n    }\n    \n    @-webkit-keyframes sk-circleFadeDelay {\n      0%, 39%, 100% {\n        opacity: 0;\n      }\n      40% {\n        opacity: 1;\n      }\n    }\n    \n    @keyframes sk-circleFadeDelay {\n      0%, 39%, 100% {\n        opacity: 0;\n      }\n      40% {\n        opacity: 1;\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return FadingCircleComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var FoldingCubeComponent = (function (_super) {
        __extends(FoldingCubeComponent, _super);
        function FoldingCubeComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'folding-cube-spinner';
            _this.childClass = 'cube';
            _this.numItems = 4;
            return _this;
        }
        FoldingCubeComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-folding-cube',
                        styles: ["\n    .folding-cube-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n      \n      -webkit-transform: rotateZ(45deg);\n      transform: rotateZ(45deg);\n    }\n    \n    .folding-cube-spinner div {\n      position: relative;\n      float: left;\n      width: 50%;\n      height: 50%;\n      background-color: transparent !important;\n      -webkit-transform: scale(1.1);\n      -ms-transform: scale(1.1);\n      transform: scale(1.1);\n    }\n    \n    .folding-cube-spinner div:before {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: #333;\n      content: '';\n      -webkit-transform-origin: 100% 100%;\n      -ms-transform-origin: 100% 100%;\n      transform-origin: 100% 100%;\n      -webkit-animation: sk-foldCubeAngle 2.4s infinite linear both;\n      animation: sk-foldCubeAngle 2.4s infinite linear both;\n    }\n    \n    .folding-cube-spinner .cube2 {\n      -webkit-transform: scale(1.1) rotateZ(90deg);\n      transform: scale(1.1) rotateZ(90deg);\n    }\n    \n    .folding-cube-spinner .cube4 {\n      -webkit-transform: scale(1.1) rotateZ(180deg);\n      transform: scale(1.1) rotateZ(180deg);\n    }\n    \n    .folding-cube-spinner .cube3 {\n      -webkit-transform: scale(1.1) rotateZ(270deg);\n      transform: scale(1.1) rotateZ(270deg);\n    }\n    \n    .folding-cube-spinner .cube2:before {\n      -webkit-animation-delay: 0.3s;\n      animation-delay: 0.3s;\n    }\n    \n    .folding-cube-spinner .cube4:before {\n      -webkit-animation-delay: 0.6s;\n      animation-delay: 0.6s;\n    }\n    \n    .folding-cube-spinner .cube3:before {\n      -webkit-animation-delay: 0.9s;\n      animation-delay: 0.9s;\n    }\n    \n    @-webkit-keyframes sk-foldCubeAngle {\n      0%, 10% {\n        -webkit-transform: perspective(140px) rotateX(-180deg);\n        transform: perspective(140px) rotateX(-180deg);\n        opacity: 0;\n      }\n      25%, 75% {\n        -webkit-transform: perspective(140px) rotateX(0deg);\n        transform: perspective(140px) rotateX(0deg);\n        opacity: 1;\n      }\n      90%, 100% {\n        -webkit-transform: perspective(140px) rotateY(180deg);\n        transform: perspective(140px) rotateY(180deg);\n        opacity: 0;\n      }\n    }\n    \n    @keyframes sk-foldCubeAngle {\n      0%, 10% {\n        -webkit-transform: perspective(140px) rotateX(-180deg);\n        transform: perspective(140px) rotateX(-180deg);\n        opacity: 0;\n      }\n      25%, 75% {\n        -webkit-transform: perspective(140px) rotateX(0deg);\n        transform: perspective(140px) rotateX(0deg);\n        opacity: 1;\n      }\n      90%, 100% {\n        -webkit-transform: perspective(140px) rotateY(180deg);\n        transform: perspective(140px) rotateY(180deg);\n        opacity: 0;\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return FoldingCubeComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var RotatingPlaneComponent = (function (_super) {
        __extends(RotatingPlaneComponent, _super);
        function RotatingPlaneComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        RotatingPlaneComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-rotating-plane',
                        styles: ["\n    .rotating-plane-spinner {\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n      \n      -webkit-animation: sk-rotateplane 1.2s infinite ease-in-out;\n      animation: sk-rotateplane 1.2s infinite ease-in-out;\n    }\n    \n    @-webkit-keyframes sk-rotateplane {\n      0% {\n        -webkit-transform: perspective(120px)\n      }\n      50% {\n        -webkit-transform: perspective(120px) rotateY(180deg)\n      }\n      100% {\n        -webkit-transform: perspective(120px) rotateY(180deg) rotateX(180deg)\n      }\n    }\n    \n    @keyframes sk-rotateplane {\n      0% {\n        transform: perspective(120px) rotateX(0deg) rotateY(0deg);\n        -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg)\n      }\n      50% {\n        transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);\n        -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg)\n      }\n      100% {\n        transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\n        -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\n      }\n    }\n  "],
                        template: "\n    <div [hidden]=\"!visible\" class=\"rotating-plane-spinner\" [style.backgroundColor]=\"color\"></div>\n  "
                    },] },
        ];
        return RotatingPlaneComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var DoubleBounceComponent = (function (_super) {
        __extends(DoubleBounceComponent, _super);
        function DoubleBounceComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'double-bounce-spinner';
            _this.childClass = 'double-bounce';
            _this.numItems = 2;
            return _this;
        }
        DoubleBounceComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-double-bounce',
                        styles: ["\n    .double-bounce-spinner {\n      position: relative;\n      margin: 25px auto;\n      width: 40px;\n      height: 40px;\n    }\n    \n    .double-bounce1,\n    .double-bounce2 {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      opacity: 0.6;\n      \n      -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\n      animation: sk-bounce 2.0s infinite ease-in-out;\n    }\n    \n    .double-bounce2 {\n      -webkit-animation-delay: -1.0s;\n      animation-delay: -1.0s;\n    }\n    \n    @-webkit-keyframes sk-bounce {\n      0%, 100% {\n        -webkit-transform: scale(0.0);\n      }\n      50% {\n        -webkit-transform: scale(1.0);\n      }\n    }\n    \n    @keyframes sk-bounce {\n      0%, 100% {\n        transform: scale(0.0);\n        -webkit-transform: scale(0.0);\n      }\n      50% {\n        transform: scale(1.0);\n        -webkit-transform: scale(1.0);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return DoubleBounceComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var WaveComponent = (function (_super) {
        __extends(WaveComponent, _super);
        function WaveComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.baseClass = 'wave-spinner';
            _this.childClass = 'rect';
            _this.numItems = 5;
            return _this;
        }
        WaveComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sk-wave',
                        styles: ["\n    .wave-spinner {\n      margin: 25px auto;\n      width: 42px;\n      height: 40px;\n    }\n    \n    .wave-spinner > div {\n      display: inline-block;\n      width: 5px;\n      margin-right: 4px;\n      height: 100%;\n      \n      -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;\n      animation: sk-stretchdelay 1.2s infinite ease-in-out;\n    }\n    \n    .wave-spinner > div:last-child {\n      margin-right: 0;\n    }\n    \n    .wave-spinner .rect2 {\n      -webkit-animation-delay: -1.1s;\n      animation-delay: -1.1s;\n    }\n    \n    .wave-spinner .rect3 {\n      -webkit-animation-delay: -1.0s;\n      animation-delay: -1.0s;\n    }\n    \n    .wave-spinner .rect4 {\n      -webkit-animation-delay: -0.9s;\n      animation-delay: -0.9s;\n    }\n    \n    .wave-spinner .rect5 {\n      -webkit-animation-delay: -0.8s;\n      animation-delay: -0.8s;\n    }\n    \n    @-webkit-keyframes sk-stretchdelay {\n      0%, 40%, 100% {\n        -webkit-transform: scaleY(0.4);\n      }\n      20% {\n        -webkit-transform: scaleY(1.0);\n      }\n    }\n    \n    @keyframes sk-stretchdelay {\n      0%, 40%, 100% {\n        transform: scaleY(0.4);\n        -webkit-transform: scaleY(0.4);\n      }\n      20% {\n        transform: scaleY(1.0);\n        -webkit-transform: scaleY(1.0);\n      }\n    }\n  "],
                        template: SpinnerTemplate
                    },] },
        ];
        return WaveComponent;
    }(SpinnerComponent));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ NG_SPIN_KIT_COMPONENTS = [
        SpinnerComponent,
        RotatingPlaneComponent,
        DoubleBounceComponent,
        WaveComponent,
        WanderingCubesComponent,
        PulseComponent,
        ChasingDotsComponent,
        CircleComponent,
        ThreeBounceComponent,
        CubeGridComponent,
        WordPressComponent,
        FadingCircleComponent,
        FoldingCubeComponent
    ];
    var SpinnerModule = (function () {
        function SpinnerModule() {
        }
        SpinnerModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule],
                        declarations: NG_SPIN_KIT_COMPONENTS,
                        exports: NG_SPIN_KIT_COMPONENTS
                    },] },
        ];
        return SpinnerModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.SpinnerComponent = SpinnerComponent;
    exports.RotatingPlaneComponent = RotatingPlaneComponent;
    exports.DoubleBounceComponent = DoubleBounceComponent;
    exports.WaveComponent = WaveComponent;
    exports.WanderingCubesComponent = WanderingCubesComponent;
    exports.PulseComponent = PulseComponent;
    exports.ChasingDotsComponent = ChasingDotsComponent;
    exports.CircleComponent = CircleComponent;
    exports.ThreeBounceComponent = ThreeBounceComponent;
    exports.CubeGridComponent = CubeGridComponent;
    exports.WordPressComponent = WordPressComponent;
    exports.FadingCircleComponent = FadingCircleComponent;
    exports.FoldingCubeComponent = FoldingCubeComponent;
    exports.SpinnerModule = SpinnerModule;
    exports.ɵa = SpinnerTemplate;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,